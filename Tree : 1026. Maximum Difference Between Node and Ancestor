/* 1026. Maximum Difference Between Node and Ancestor 
   Link : https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/description/

*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int d; //difference variable
    void dfs(TreeNode *root,int mx,int mn){
        mx=max(mx,root->val); //storing max
        mn=min(mn,root->val);//storing min
        d=max(mx-mn,d);//storing maximum of difference
        if(root->left)dfs(root->left,mx,mn);
        if(root->right)dfs(root->right,mx,mn);
    }
    int maxAncestorDiff(TreeNode* root) {
        d=0;
        int mx,mn;
        mx=mn=root->val;
        if(root)
        dfs(root,mx,mn);
        return d;
    }
};
