/*  872. Leaf-Similar Trees
    Link : https://leetcode.com/problems/leaf-similar-trees/description/
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isleaf(TreeNode* root){
        return !root->left && !root->right;
    }
    bool check(TreeNode* root, vector<int>&v){
        if(!root){return false;}
        if(isleaf(root)){v.push_back(root->val); return true;}
        int left=check(root->left, v);
        int right=check(root->right, v);
        //if(check(root->left, v) || check(root->right, v)){return true;}
        return false;
    }
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int>v1, v2;
        check(root1, v1);
        check(root2, v2);
        return v1==v2;
    }
};
