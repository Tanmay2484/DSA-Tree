/* 1339. Maximum Product of Splitted Binary Tree
   Link : https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/description/
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   long total,ans=0;
    long sum(TreeNode * root){
        if(!root) return 0;
        long curSum=root->val+sum(root->left)+sum(root->right);
        ans=max(ans,curSum*(total-curSum));
        return curSum;
    }
    
    int maxProduct(TreeNode* root) {
        total=sum(root);
        sum(root);
        int mod=1e9+7;
        return ans%mod;
    }
};
