/* 103. Binary Tree Zigzag Level Order Traversal
   Link: https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/description/
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   

vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(!root) return {};
        stack<TreeNode*>curr,next;
        bool lefttoRight=true;
        curr.push(root);
        vector<vector<int>>res;
        vector<int>v;
        while(!curr.empty()){
            while(!curr.empty()){
                auto r=curr.top();curr.pop();
                v.push_back(r->val);
                if(lefttoRight){
                    if(r->left) next.push(r->left);
                    if(r->right) next.push(r->right);
                }else{
                    if(r->right) next.push(r->right);
                    if(r->left) next.push(r->left);
                }
            }
            curr=next;
            next=stack<TreeNode*>();
            lefttoRight=!lefttoRight;
            res.push_back(v);
            v.clear();
        }
        return res;
    }
};
