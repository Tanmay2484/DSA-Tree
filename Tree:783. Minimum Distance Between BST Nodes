/* 783. Minimum Distance Between BST Nodes
   Link:  https://leetcode.com/problems/minimum-distance-between-bst-nodes/description/
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minVal = INT_MAX;
    TreeNode *prev;
    
    void inOrder(TreeNode *root) {
        if(root == NULL) {
            return;
        }
        inOrder(root->left);
        if(prev) minVal = min(minVal, abs(root->val - prev->val));
        prev = root;
        inOrder(root->right);
    }
    
    int minDiffInBST(TreeNode* root) {
        inOrder(root);
        return minVal;
    }
};
