/*  Binary Tree Inorder Traversal
    Link : https://leetcode.com/problems/binary-tree-inorder-traversal/
*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root,vector<int>&vec){
        if(root==NULL) return;   // Inoreder traversal - left root right 
        inorder(root->left,vec); // Preorder traversal - root left right
        vec.push_back(root->val);// Postorder traversal -left right root
        inorder(root->right,vec);
    }
    vector<int> inorderTraversal(TreeNode* root){ 
        vector<int>vec;
        if(root==NULL)
           return {};
        inorder(root,vec);
        return vec;
    }
};
