/*  222. Count Complete Tree Nodes
    Link : https://leetcode.com/problems/count-complete-tree-nodes/description/
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void heightCount(TreeNode* root,int &height){
        if(!root)
            return;
        height++;// calculating the height if one or two nodes there then it will count
        heightCount(root->left,height);// atfirst we are going to left node 
        heightCount(root->right,height);// then the right node
    }
    // recursive code 
    int countNodes(TreeNode* root) {
        int height=0;
        if(!root)
            return 0;
        heightCount(root,height);

        return height;
    }

};
